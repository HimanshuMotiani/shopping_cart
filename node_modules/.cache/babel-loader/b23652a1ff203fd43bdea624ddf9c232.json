{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/AltCampusRepository/react/shopping_cart/src/components/App.js\";\nimport React from 'react';\nimport Aside from './Aside';\nimport Product from './Product';\nimport Cart from './Cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpdateLocalStorage = () => {\n      localStorage.setItem(\"carts\", JSON.stringify(this.state.productCart));\n    };\n\n    this.handleSize = event => {\n      let val = event.target.innerText;\n      let sizes = this.state.activeSize;\n\n      if (sizes.indexOf(val) === -1) {\n        sizes.push(val);\n      } else {\n        sizes.splice(sizes.indexOf(val), 1);\n      }\n\n      this.setState({\n        activeSize: sizes\n      });\n    };\n\n    this.addToCart = product => {\n      let productArr = this.state.productCart;\n\n      if (productArr.indexOf(product) === -1) {\n        productArr.push(product);\n      } else {\n        productArr.map(item => {\n          if (item.id === product.id) {\n            item.quantity = item.quantity + 1;\n          }\n        });\n      }\n\n      this.setState({\n        productCart: productArr\n      });\n    };\n\n    this.handleIncrement = product => {\n      let productArr = this.state.productCart;\n      productArr.map(item => {\n        if (item.id == product.id) {\n          item.quantity = item.quantity + 1;\n          return item;\n        }\n      });\n      this.setState({\n        productCart: productArr\n      });\n    };\n\n    this.handleDecrement = (product, index) => {\n      let productArr = this.state.productCart;\n      productArr.map(item => {\n        if (item.id === product.id && item.quantity > 1) {\n          item.quantity = item.quantity - 1;\n          return item;\n        }\n      });\n      this.setState({\n        productCart: productArr\n      });\n    };\n\n    this.removeProduct = product => {\n      let productArr = this.state.productCart;\n      productArr.map((item, index) => {\n        if (item.id == product.id) {\n          productArr.splice(index, 1);\n        }\n      });\n      this.setState({\n        productCart: productArr\n      });\n    };\n\n    this.state = {\n      activeSize: [],\n      productCart: []\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.carts) {\n      this.setState({\n        productCart: JSON.parse(localStorage.carts)\n      });\n    }\n\n    this.eventId = window.addEventListener(\"beforeunload\", this.handleUpdateLocalStorage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"beforeunload\", this.handleUpdateLocalStorage);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex container\",\n        children: [/*#__PURE__*/_jsxDEV(Aside, {\n          activeSize: this.state.activeSize,\n          handleSize: this.handleSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Product, {\n          activeSize: this.state.activeSize,\n          addToCart: this.addToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Cart, {\n          productCart: this.state.productCart,\n          handleIncrement: this.handleIncrement,\n          handleDecrement: this.handleDecrement,\n          removeProduct: this.removeProduct,\n          state: this.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/apple/Documents/AltCampusRepository/react/shopping_cart/src/components/App.js"],"names":["React","Aside","Product","Cart","App","Component","constructor","props","handleUpdateLocalStorage","localStorage","setItem","JSON","stringify","state","productCart","handleSize","event","val","target","innerText","sizes","activeSize","indexOf","push","splice","setState","addToCart","product","productArr","map","item","id","quantity","handleIncrement","handleDecrement","index","removeProduct","componentDidMount","carts","parse","eventId","window","addEventListener","componentWillUnmount","removeEventListener","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Aside from './Aside';\nimport Product from './Product'\nimport Cart from './Cart'\nclass App extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            activeSize : [],\n            productCart :[],\n        }\n    }\n\n    componentDidMount() {\n        if (localStorage.carts) {\n            this.setState({ productCart: JSON.parse(localStorage.carts) })\n        }\n        this.eventId = window.addEventListener(\"beforeunload\", this.handleUpdateLocalStorage)\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener(\"beforeunload\", this.handleUpdateLocalStorage)\n    }\n    handleUpdateLocalStorage = ()=>{\n        localStorage.setItem(\"carts\",JSON.stringify(this.state.productCart))\n    }\n\n    handleSize = (event)=>{\n        let val = event.target.innerText;\n        let sizes = this.state.activeSize;\n        if(sizes.indexOf(val) === -1){\n            sizes.push(val);\n        }\n        else{\n            sizes.splice(sizes.indexOf(val),1)\n        }\n        this.setState({\n            activeSize:sizes\n        });\n    }\n\n    addToCart = (product)=>{\n        let productArr= this.state.productCart;\n        if(productArr.indexOf(product) === -1){\n            productArr.push(product)\n        }\n        else{\n            productArr.map(item=>{\n               if(item.id === product.id){\n                   item.quantity = item.quantity + 1\n               }\n            })\n        }\n        this.setState({\n            productCart:productArr\n        })\n    }\n    handleIncrement = (product)=>{\n        let productArr= this.state.productCart;\n            productArr.map(item=>{\n               if(item.id == product.id){\n                   item.quantity = item.quantity + 1\n                   return item;\n               }\n            })\n        this.setState({\n                productCart:productArr\n        })\n    }\n    handleDecrement = (product,index)=>{\n        let productArr= this.state.productCart;\n            productArr.map(item=>{\n               if(item.id === product.id && item.quantity >1){\n                   item.quantity = item.quantity - 1\n                   return item;\n               }\n            })\n        this.setState({\n                productCart:productArr\n        })\n    }\n    removeProduct = (product)=>{\n        let productArr= this.state.productCart;\n        productArr.map((item,index)=>{\n            if(item.id == product.id){\n                productArr.splice(index,1)\n            }\n         })\n     this.setState({\n             productCart:productArr\n     })\n    }\n    \n    render(){\n    return (\n    <>\n    <main className=\"flex container\">\n        <Aside activeSize={this.state.activeSize}  handleSize={this.handleSize}/>\n        <Product activeSize={this.state.activeSize} addToCart={this.addToCart}/>\n        <Cart productCart={this.state.productCart} \n        handleIncrement={this.handleIncrement} \n        handleDecrement={this.handleDecrement}\n        removeProduct={this.removeProduct}\n        state={this.state}\n        />\n    </main>\n\n    </>\n    )\n}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}